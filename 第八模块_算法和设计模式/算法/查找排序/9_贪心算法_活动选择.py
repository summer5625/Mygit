# -*- coding: utf-8 -*-
# @Time    : 2020/1/17  15:39
# @Author  : XiaTian
# @File    : 9_贪心算法_活动选择.py
'''

有n个活动，这些活动要占用同一片场地，而场地在某时刻只能供一个活动使用。每个活动都有一个开始时间s和结束时间f（时间为整数）
，表示活动在[s, j)区间占用场地。
问题：安排那些活能够是该场地举办的活动数量最多？

i     1    2    3    4    5    6    7    8    9    10    11
s     1    3    0    5    3    5    6    8    8    2     12
f     4    5    6    7    9    9    10   11   12   14    16

思路：
    活动时间最早结束的活动，一定在最优解中。一个活动结束的越早，后面剩余时间就越多

'''

ac = [(1, 4), (3, 5), (0, 6), (5, 7), (3, 9), (5, 9), (6, 10), (8, 11), (8, 12), (2, 14), (12, 16)]
ac.sort(key=lambda x:x[1])


def ac_select(ac):
    res = [ac[0]]
    for i in range(1, len(ac)):
        if ac[i][0] > res[-1][1]:
            res.append(ac[i])
    return res


r = ac_select(ac)
print(r)